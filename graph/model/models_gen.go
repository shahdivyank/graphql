// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
)

type AcceptFriend struct {
	ID uuid.UUID `json:"id"`
}

type Activity struct {
	ID        uuid.UUID `json:"id"`
	User      *User     `json:"user"`
	Content   string    `json:"content"`
	Timestamp time.Time `json:"timestamp"`
	Beat      *Beat     `json:"beat"`
}

type Beat struct {
	ID          uuid.UUID `json:"id"`
	User        *User     `json:"user"`
	Location    string    `json:"location"`
	Timestamp   time.Time `json:"timestamp"`
	Song        string    `json:"song"`
	Artist      string    `json:"artist"`
	Description string    `json:"description"`
	Longitude   float64   `json:"longitude"`
	Latitude    float64   `json:"latitude"`
	Image       string    `json:"image"`
	Comments    int32     `json:"comments"`
}

type Comment struct {
	ID        uuid.UUID `json:"id"`
	Timestamp time.Time `json:"timestamp"`
	User      *User     `json:"user"`
	Beat      *Beat     `json:"beat"`
	Comment   string    `json:"comment"`
}

type DenyFriend struct {
	ID uuid.UUID `json:"id"`
}

type Friend struct {
	ID        uuid.UUID `json:"id"`
	Alpha     *User     `json:"alpha"`
	Beta      *User     `json:"beta"`
	Timestamp time.Time `json:"timestamp"`
	Status    int32     `json:"status"`
	Sender    uuid.UUID `json:"sender"`
}

type Mutation struct {
}

type NewBeat struct {
	User        uuid.UUID `json:"user"`
	Location    string    `json:"location"`
	Song        string    `json:"song"`
	Artist      string    `json:"artist"`
	Description string    `json:"description"`
	Longitude   float64   `json:"longitude"`
	Latitude    float64   `json:"latitude"`
	Image       string    `json:"image"`
}

type NewComment struct {
	User    uuid.UUID `json:"user"`
	Beat    uuid.UUID `json:"beat"`
	Comment string    `json:"comment"`
}

type NewFriend struct {
	User   uuid.UUID `json:"user"`
	Friend uuid.UUID `json:"friend"`
}

type NewUser struct {
	Name       string `json:"name"`
	FirebaseID string `json:"firebaseID"`
	Phone      string `json:"phone"`
	Username   string `json:"username"`
	Bio        string `json:"bio"`
}

type Query struct {
}

type UpdateBio struct {
	User uuid.UUID `json:"user"`
	Bio  string    `json:"bio"`
}

type UpdateUsername struct {
	User     uuid.UUID `json:"user"`
	Username string    `json:"username"`
}

type User struct {
	ID         uuid.UUID `json:"id"`
	Name       string    `json:"name"`
	FirebaseID string    `json:"firebaseID"`
	Phone      string    `json:"phone"`
	Username   string    `json:"username"`
	Bio        string    `json:"bio"`
	Beatdrops  int32     `json:"beatdrops"`
	Friends    int32     `json:"friends"`
	Settings   string    `json:"settings"`
	Photo      string    `json:"photo"`
	Timestamp  time.Time `json:"timestamp"`
}
